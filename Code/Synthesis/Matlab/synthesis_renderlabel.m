close all; clear all;

P.name_dataset = 'Teaser';
P.name_data = 'Resized';
P.name_prefix = 'Teaser';
P.name_format = '.jpg';
P.name_syn = 'Syn';
P.name_syn_input = 'Input';

P.label_list = [102.0 / 255, 153.0 / 255, 255.0 / 255; ... 
                255.0 / 255, 204.0 / 255, 102.0 / 255; ... 
                102.0 / 255, 255.0 / 255, 127.0 / 255; ... 
                255.0 / 255, 127.0 / 255, 102.0 / 255; ...                 
                102.0 / 255, 230.0 / 255, 255.0 / 255; ... 
                41.0 / 255, 112.0 / 255, 255.0 / 255; ... 
                255.0 / 255, 184.0 / 255, 41.0 / 255; ... 
                235.0 / 255, 156.0 / 255, 0.0 / 255; ... 
                0.0 / 255, 78.0 / 255, 235.0 / 255; ...                
                255.0 / 255, 102.0 / 255, 230.0 / 255; ... 
                153.0 / 255, 255.0 / 255, 102.0 / 255; ... 
                127.0 / 255, 102.0 / 255, 255.0 / 255; ... 
                230.0 / 255, 255.0 / 255, 102.0 / 255; ... 
                102.0 / 255, 255.0 / 255, 204.0 / 255; ... 
                255.0 / 255, 102.0 / 255, 153.0 / 255; ... 
                204.0 / 255, 102.0 / 255, 255.0 / 255; ...
                200.0 / 255, 130.0 / 255, 130.0 / 255; ...
                0.0 / 255, 0.0 / 255, 0.0 / 255; ...
                50.0 / 255, 50.0 / 255, 50.0 / 255; ...
                100.0 / 255, 100.0 / 255, 100.0 / 255; ...
                150.0 / 255, 150.0 / 255, 150.0 / 255; ...
                200.0 / 255, 200.0 / 255, 200.0 / 255; ...
                255.0 / 255, 255.0 / 255, 255.0 / 255;
                rand(100, 3)]; % colors for different labels
P.label_list(4:end, :) = P.label_list(4:end, :)/1.25;


P.key_label_list = [250/255, 100/255, 100/255; ...
                    100/255, 250/255, 100/255; ...
                    100/255, 100/255, 250/255;];
                
max_num_bb_type = 35;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DO NOT CHANGE AFTER THIS LINE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

for i_img =185:185
    nameDetection = ['C:\Chuan\data\2DBuildingBlocks\Facade\Resized\resultAIO\rob\Facade(' num2str(i_img) ')_afmg.mat'];
%     nameDetectionOutput = [P.name_path  P.name_dataset  '\' P.name_syn '\' P.name_syn_input '\' P.name_prefix  '(' num2str(i_img) ')Detection.txt'];
    Detection = [];
    
    if exist(nameDetection, 'file')
        load(nameDetection);
        Detection = Merge;
    else
        Detection.rep = [];
    end    
    
    im = imread(['C:\Chuan\data\2DBuildingBlocks\Facade\Resized\Facade(' num2str(i_img) ').jpg']);
    im_out = ones(size(im));
    for i = 1:size(Detection.rep, 2)
        for j = 1:size(Detection.rep{1, i}, 2)
            x_start = Detection.rep{1, i}(1, j);
            y_start = Detection.rep{1, i}(2, j);
            im_out(y_start:y_start + Detection.rep{1, i}(4, j) - 1, x_start:x_start + Detection.rep{1, i}(3, j) - 1, 1) = P.label_list(i, 1);
            im_out(y_start:y_start + Detection.rep{1, i}(4, j) - 1, x_start:x_start + Detection.rep{1, i}(3, j) - 1, 2) = P.label_list(i, 2);
            im_out(y_start:y_start + Detection.rep{1, i}(4, j) - 1, x_start:x_start + Detection.rep{1, i}(3, j) - 1, 3) = P.label_list(i, 3);
        end
            
    end
        
    imwrite(im_out, ['Facade(' num2str(i_img) ')_label.png']);
    
end

